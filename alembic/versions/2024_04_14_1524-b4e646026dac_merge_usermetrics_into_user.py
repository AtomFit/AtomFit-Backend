"""Merge usermetrics into user

Revision ID: b4e646026dac
Revises: 1e3f5d223fdd
Create Date: 2024-04-14 15:24:27.783321

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "b4e646026dac"
down_revision: Union[str, None] = "1e3f5d223fdd"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_metrics")
    op.add_column("user", sa.Column("is_male", sa.Boolean(), nullable=False))
    op.add_column("user", sa.Column("age", sa.Integer(), nullable=False))
    op.add_column("user", sa.Column("height", sa.Float(), nullable=False))
    op.add_column("user", sa.Column("weight", sa.Float(), nullable=False))
    op.add_column("user", sa.Column("goal", sa.String(), nullable=False))
    op.add_column("user", sa.Column("weight_preference", sa.Float(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("user", "weight_preference")
    op.drop_column("user", "goal")
    op.drop_column("user", "weight")
    op.drop_column("user", "height")
    op.drop_column("user", "age")
    op.drop_column("user", "is_male")
    op.create_table(
        "user_metrics",
        sa.Column(
            "height",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "weight",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("age", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("goal", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "weight_preference",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("is_male", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.CheckConstraint(
            "goal::text = ANY (ARRAY['lose'::character varying, 'maintain'::character varying, 'gain'::character varying]::text[])",
            name="check_goal",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name="user_metrics_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="user_metrics_pkey"),
    )
    # ### end Alembic commands ###
